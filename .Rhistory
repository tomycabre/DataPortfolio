library(readxl)
Dolor <- read_excel("DataAnalysisProjects/Project2/Dolor.xlsx")
View(Dolor)
View(Dolor)
library(readxl)
# Cargar los datos del archivo "Dolor.xlsx"
data <- read_excel("Dolor.xlsx")
# Cargar los datos del archivo "Dolor.xlsx"
data <- read_excel("Dolor")
# Cargar los datos del archivo "Dolor.xlsx"
data <- read_excel(Dolor)
# Cargar los datos del archivo "Dolor.xlsx"
data <- (Dolor)
# Ajustar el modelo de regresión logística
modelo <- glm(Estrechamiento_arterias_coronarias ~ Colesterol, data = data, family = "binomial")
# Ajustar el modelo de regresión logística
modelo <- glm(data$Estrechamiento_arterias_coronarias ~ Colesterol, data = data, family = "binomial")
# Ajustar el modelo de regresión logística
modelo <- glm(Dolor$Estrechamiento_arterias_coronarias ~ Colesterol, Dolor = Dolor, family = "binomial")
# Ajustar el modelo de regresión logística
modelo <- glm(data$Estrechamiento_arterias_coronarias ~ Colesterol, data = data, family = "binomial")
View(data)
str(data)
# Ajustar el modelo de regresión logística
modelo <- glm(`Estrechamiento arterias coronarias` ~ Colesterol, data = data, family = "binomial")
# Resumen del modelo
summary(modelo)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
data$Colesterol <- as.numeric(data$Colesterol)
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
probabilidad <- predicciones
probabilidad
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
data$Colesterol <- as.numeric(data$Colesterol)
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Convertir la variable 'Colesterol' a numérica
data$Colesterol <- as.numeric(data$Colesterol)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Convertir la variable 'Colesterol' a numérica
data$Colesterol <- as.numeric(data$Colesterol)
# Verificar nuevamente los primeros valores únicos de la variable 'Colesterol'
unique(data$Colesterol)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(data$Colesterol = 199)
View(data)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
library(readxl)
# Cargar los datos del archivo "Dolor.xlsx"
data <- (Dolor)
str(data)
library(readxl)
Dolor <- read_excel("DataAnalysisProjects/Project2/Dolor.xlsx")
View(Dolor)
# Cargar los datos del archivo "Dolor.xlsx"
data <- (Dolor)
str(data)
library(readxl)
# Eliminar filas con valores NA en la variable Colesterol
data <- na.omit(data)
View(data)
View(data)
View(data)
# Ajustar el modelo de regresión logística
modelo <- glm(`Estrechamiento arterias coronarias` ~ Colesterol, data = data, family = "binomial")
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Resumen del modelo
summary(modelo)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = 199)
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol igual a 199
nuevo_data <- data.frame(Colesterol = as.numeric(199))
predicciones <- predict(modelo, newdata = nuevo_data, type = "response")
# Instala y carga las bibliotecas necesarias
install.packages("readxl")
install.packages("glm2")
library(readxl)
library(glm2)
# Carga los datos del archivo Dolor.xlsx
datos <- read_excel("Dolor.xlsx")
# Verifica la estructura de los datos
str(datos)
library(readxl)
Dolor <- read_excel("DataAnalysisProjects/Project2/Dolor.xlsx")
View(Dolor)
# Carga los datos del archivo Dolor.xlsx
datos <- (Dolor)
# Verifica la estructura de los datos
str(datos)
# Realiza el modelo de regresión logística simple
modelo <- glm(Estrechamiento ~ Colesterol, data = datos, family = binomial)
# Realiza el modelo de regresión logística simple
modelo <- glm(Estrechamiento_arterias_coronarias ~ Colesterol, data = datos, family = binomial)
# Realiza el modelo de regresión logística simple
modelo <- glm(datos$`Estrechamiento arterias coronarias` ~ Colesterol, data = datos, family = binomial)
plot(datos$Colesterol, datos$Estrechamiento, xlab = "Colesterol", ylab = "Estrechamiento", pch = 19, col = "blue")
plot(datos$Colesterol, datos$`Estrechamiento arterias coronarias`, xlab = "Colesterol", ylab = "Estrechamiento", pch = 19, col = "blue")
curve(predict(modelo, newdata = data.frame(Colesterol = x), type = "response"), add = TRUE, col = "red", lwd = 2)
# Calcula la probabilidad de que una persona con un nivel de colesterol igual a 199 presente estrechamiento arterial
nivel_colesterol <- 199
probabilidad <- predict(modelo, newdata = data.frame(Colesterol = nivel_colesterol), type = "response")
datos$Colesterol <- as.numeric(datos$Colesterol)
probabilidad <- predict(modelo, newdata = data.frame(Colesterol = nivel_colesterol), type = "response")
probabilidad
View(datos)
na.omit(datos$Colesterol)
probabilidad <- predict(modelo, newdata = data.frame(Colesterol = nivel_colesterol), type = "response")
probabilidad <- predict(modelo, newdata = data.frame(nivel_colesterol), type = "response")
# Instala y carga las bibliotecas necesarias
# Cargar paquetes necesarios
library(dplyr)
library(ggplot2)
# Eliminar filas con valores NA en la variable "Colesterol"
datos <- datos %>% na.omit(Colesterol)
# Cargar datos
datos <- (Dolor)
library(readxl)
Dolor <- read_excel("DataAnalysisProjects/Project2/Dolor.xlsx")
View(Dolor)
# Instala y carga las bibliotecas necesarias
# Cargar paquetes necesarios
library(dplyr)
library(ggplot2)
# Cargar datos
datos <- (Dolor)
# Eliminar filas con valores NA en la variable "Colesterol"
datos <- datos %>% na.omit(Colesterol)
# Ajustar el modelo de regresión logística
modelo <- glm(Estrechamiento ~ Colesterol, data = datos, family = binomial)
# Ajustar el modelo de regresión logística
modelo <- glm(datos$`Estrechamiento arterias coronarias` ~ Colesterol, data = datos, family = binomial)
# Crear una secuencia de valores de colesterol para predecir
seq_colesterol <- seq(min(datos$Colesterol, na.rm = TRUE), max(datos$Colesterol, na.rm = TRUE), length.out = 100)
# Calcular la probabilidad de estrechamiento para cada valor de colesterol
prob_estrechamiento <- predict(modelo, newdata = data.frame(Colesterol = seq_colesterol), type = "response")
# Crear una secuencia de valores de colesterol para predecir
seq_colesterol <- seq(min(datos$Colesterol, na.rm = TRUE), max(datos$Colesterol, na.rm = TRUE), length.out = 100)
# Cargar paquetes necesarios
library(dplyr)
library(ggplot2)
# Cargar datos
datos <- (Dolor)
# Eliminar filas con valores NA en la variable "Colesterol"
datos <- datos %>% na.omit(Colesterol)
# Obtener el mínimo y máximo de "Colesterol" sin incluir NA
min_colesterol <- min(datos$Colesterol, na.rm = TRUE)
max_colesterol <- max(datos$Colesterol, na.rm = TRUE)
# Ajustar el modelo de regresión logística
modelo <- glm(Estrechamiento ~ Colesterol, data = datos, family = binomial)
# Ajustar el modelo de regresión logística
modelo <- glm(datos$`Estrechamiento arterias coronarias` ~ Colesterol, data = datos, family = binomial)
# Crear una secuencia de valores de colesterol para predecir
seq_colesterol <- seq(min_colesterol, max_colesterol, length.out = 100)
# Verificar la clase de la variable "Colesterol" y si hay valores NA
str(datos$Colesterol)
table(is.na(datos$Colesterol))
# Convertir la variable "Colesterol" a tipo numérico
datos$Colesterol <- as.numeric(datos$Colesterol)
# Crear la secuencia de valores de colesterol
min_colesterol <- min(datos$Colesterol, na.rm = TRUE)
max_colesterol <- max(datos$Colesterol, na.rm = TRUE)
seq_colesterol <- seq(min_colesterol, max_colesterol, length.out = 100)
# Calcular la probabilidad de estrechamiento para cada valor de colesterol
prob_estrechamiento <- predict(modelo, newdata = data.frame(Colesterol = seq_colesterol), type = "response")
# Crear un nuevo conjunto de datos con la secuencia de valores de colesterol
new_data <- data.frame(Colesterol = seq_colesterol)
# Convertir la variable "Colesterol" a tipo numérico en el nuevo conjunto de datos
new_data$Colesterol <- as.numeric(new_data$Colesterol)
# Calcular las probabilidades de estrechamiento
prob_estrechamiento <- predict(modelo, newdata = new_data, type = "response")
# Calcular la probabilidad de estrechamiento para cada valor de colesterol
prob_estrechamiento <- predict(modelo, newdata = data.frame(Colesterol = seq_colesterol), type = "response")
library(readxl)
# Cargar los datos
datos <- read_excel("Dolor.xlsx")
# Cargar los datos
datos <-(Dolor)
# Ajustar el modelo de regresión logística simple
modelo <- glm(Estrechamiento_Arterial ~ Colesterol, data = datos, family = binomial)
# Ajustar el modelo de regresión logística simple
modelo <- glm(datos$`Estrechamiento arterias coronarias` ~ Colesterol, data = datos, family = binomial)
# Resumen del modelo
summary(modelo)
# Calcular la probabilidad de estrechamiento arterial para un nivel de colesterol de 199
nivel_colesterol <- 199
prob_estrechamiento <- predict(modelo, newdata = data.frame(Colesterol = nivel_colesterol), type = "response")
prob_estrechamiento
#Eliminar filas con NA en la columna "Colesterol"
datos_limpios <- datos[!is.na(datos$Colesterol), ]
View(datos_limpios)
# Eliminar filas con valores no numéricos en la columna "Colesterol"
datos_limpios <- datos[!is.na(as.numeric(datos$Colesterol)), ]
View(datos_limpios)
# Ajustar modelo de regresión logística simple
modelo <- glm(Estrechamiento ~ Colesterol, data = datos_limpios, family = binomial)
# Ajustar modelo de regresión logística simple
modelo <- glm(datos$`Estrechamiento arterias coronarias` ~ Colesterol, data = datos_limpios, family = binomial)
# Verificar si hay valores NA en la columna "Colesterol"
anyNA(datos_limpios$Colesterol)
# Verificar si hay diferencias en las longitudes de las variables
length(datos_limpios$`Estrechamiento arterias coronarias`)
length(datos_limpios$Colesterol)
head(datos_limpios$Colesterol)
